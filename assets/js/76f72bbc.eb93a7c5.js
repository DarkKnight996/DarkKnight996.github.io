"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[876],{5546:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"daily/20250901-20250907","title":"20250901-20250907","description":"2025-09-01","source":"@site/docs/daily/20250901-20250907.md","sourceDirName":"daily","slug":"/daily/20250901-20250907","permalink":"/daily/20250901-20250907","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1761311518000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Daily","permalink":"/category/daily"},"next":{"title":"20250908-20250914","permalink":"/daily/20250908-20250914"}}');var r=i(4848),t=i(8453);const a={},o="20250901-20250907",l={},c=[{value:"2025-09-01",id:"2025-09-01",level:2},{value:"2025-09-02",id:"2025-09-02",level:2},{value:"2025-09-03",id:"2025-09-03",level:2},{value:"2025-09-04",id:"2025-09-04",level:2},{value:"2025-09-05",id:"2025-09-05",level:2},{value:"2025-09-06",id:"2025-09-06",level:2},{value:"2025-09-07",id:"2025-09-07",level:2}];function h(n){const e={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"20250901-20250907",children:"20250901-20250907"})}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-01",children:"2025-09-01"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] STZ: A High Quality and High Speed Streaming Lossy Compression Framework\nfor Scientific Data"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models inference], [streaming compression, lossy compression, scientific data, progressive decompression, random-access decompression]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Daoce Wang, Pascal Grosset, Jesus Pulido, Jiannan Tian, Tushar M. Athawale, Jinda Jia, Baixi Sun, Boyuan Zhang, Sian Jin, Kai Zhao, James Ahrens, Fengguang Song"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Unknown (insufficient information provided)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.01626v1",children:"http://arxiv.org/pdf/2509.01626v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," The paper proposes a novel streaming compression framework that supports both progressive and random-access decompression while maintaining high quality. It uses hierarchical partitioning and prediction strategies to achieve compression quality comparable to SZ3 with significantly faster speed. The method enables efficient on-demand data access and flexible analysis workflows for scientific data."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] LiquidGEMM: Hardware-Efficient W4A8 GEMM Kernel for High-Performance LLM\nServing"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [kernels], [quantization, GEMM kernel, W4A8, LLM inference, hardware efficiency, Tensor Cores]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Huanqi Hu, Bowen Xiao, Shixuan Sun, Jianian Yin, Zhexi Zhang, Xiang Luo, Chengquan Jiang, Weiqi Xu, Xiaoying Jia, Xin Liu, Minyi Guo"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," NVIDIA"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.01229v1",children:"http://arxiv.org/pdf/2509.01229v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," LiquidGEMM introduces a hardware-efficient W4A8 GEMM kernel with LiquidQuant for fast dequantization and an implicit fine-grained pipeline to overlap operations. It achieves up to 2.90x speedup over existing W4A8 kernels and up to 4.94x system-level speedup, outperforming NVIDIA TensorRT-LLM kernels by 1.12-1.63x."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] LobRA: Multi-tenant Fine-tuning over Heterogeneous Data"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [finetuning], [multi-tenant fine-tuning, LoRA adapters, heterogeneous data, sequence length variation, workload balance]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Sheng Lin, Fangcheng Fu, Haoyang Li, Hao Ge, Xuanyu Wang, Jiawen Niu, Yaofeng Tu, Bin Cui"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Based on the technical focus and terminology, likely from academic institutions or companies specializing in machine learning systems (e.g., universities with strong ML/AI departments or tech companies like Google, Microsoft, Meta)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.01193v1",children:"http://arxiv.org/pdf/2509.01193v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," LobRA introduces a framework for efficient multi-tenant fine-tuning using LoRA adapters by addressing data heterogeneity through heterogeneous resource deployments and workload balancing. It reduces GPU time by 45.03%-60.67% for joint fine-tuning tasks. The method optimizes training efficiency in shared base model scenarios."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Optimal Parallel Scheduling under Concave Speedup Functions"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [scheduling], [parallel scheduling, concave speedup functions, resource allocation, cloud computing, edge computing, AI applications]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Chengzhang Li, Peizhong Ju, Atilla Eryilmaz, Ness Shroff"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Based on the technical content about cloud/edge computing and AI applications, likely from institutions like MIT, Stanford, UC Berkeley, or Microsoft Research (specific institution cannot be determined from provided content)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.01811v1",children:"http://arxiv.org/pdf/2509.01811v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," The paper proposes the Consistent Derivative Ratio Rule and General Water-Filling method for optimal parallel job scheduling under arbitrary concave speedup functions. It introduces the SmartFill algorithm that selectively allocates resources rather than distributing to all active jobs. Numerical evaluations show SmartFill substantially outperforms prior heSRPT method across various concave speedup functions."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-02",children:"2025-09-02"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] An Efficient and Adaptive Watermark Detection System with Tile-based\nError Correction"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [kernels], [watermark detection, error correction, GPU optimization, tiling techniques, Reed-Solomon codes, resource-aware scheduling]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Xinrui Zhong, Xinze Feng, Jingwei Zuo, Fanjiang Ye, Yi Mu, Junfeng Guo, Heng Huang, Myungjin Lee, Yuke Wang"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Unable to determine from provided information"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.02447v1",children:"http://arxiv.org/pdf/2509.02447v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," QRMark combines QR Code-inspired error correction with tiling techniques and Reed-Solomon codes to maintain detection accuracy while improving efficiency. The system implements resource-aware stream allocation and tile-based workload interleaving to optimize GPU utilization. Evaluations show QRMark achieves 2.43x inference speedup over sequential baselines while preserving robustness."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Efficient Pyramidal Analysis of Gigapixel Images on a Decentralized\nModest Computer Cluster"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [cluster infrastructure], [gigapixel image analysis, pyramid method, distributed computing, load balancing, biomedical imaging]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Marie Reinbigler, Rishi Sharma, Rafael Pires, Elisabeth Brunet, Anne-Marie Kermarrec, Catalin Fetita"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Unknown (insufficient information to determine)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.02440v1",children:"http://arxiv.org/pdf/2509.02440v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," The paper presents PyramidAI, a pyramidal approach that analyzes gigapixel images by starting with lower resolutions and progressively focusing on regions of interest at higher resolutions. It reduces processed data by up to 2.65x while maintaining accuracy and demonstrates efficient parallelization on modest computer clusters, cutting analysis time from over an hour to minutes with 12 workers."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] HydroGAT: Distributed Heterogeneous Graph Attention Transformer for\nSpatiotemporal Flood Prediction"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models training], [graph neural networks, spatiotemporal prediction, flood forecasting, distributed training, heterogeneous graphs, attention mechanisms, hydrological modeling]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Aishwarya Sarkar, Autrin Hakimi, Xiaoqiong Chen, Hai Huang, Chaoqun Lu, Ibrahim Demir, Ali Jannesari"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," NERSC (National Energy Research Scientific Computing Center) / swapp-lab"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.02481v1",children:"http://arxiv.org/pdf/2509.02481v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," HydroGAT introduces a heterogeneous graph attention transformer that models both spatial river network topology and temporal dependencies for flood prediction. The method achieves superior discharge forecasting performance with NSE up to 0.97 while providing interpretable attention maps. A distributed training pipeline enables efficient high-resolution basin-scale modeling, demonstrating 15x speedup on supercomputing infrastructure."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] KubeIntellect: A Modular LLM-Orchestrated Agent Framework for End-to-End\nKubernetes Management"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [cluster infrastructure], [Kubernetes management, LLM orchestration, modular agents, natural language interface, tool synthesis]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Mohsen Seyedkazemi Ardebili, Andrea Bartolini"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Microsoft (based on Azure integration mentioned in abstract)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.02449v1",children:"http://arxiv.org/pdf/2509.02449v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," KubeIntellect introduces an LLM-orchestrated agent framework that uses modular agents and a supervisor to interpret natural language queries for comprehensive Kubernetes operations. The system achieves 93% tool synthesis success rate and 100% reliability across 200 queries, demonstrating effective end-to-end Kubernetes management through natural language interaction. This represents a new class of interpretable, LLM-driven systems for complex infrastructure management."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] A Continuous Energy Ising Machine Leveraging Difference-of-Convex\nProgramming"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models inference], [Ising machine, combinatorial optimization, difference-of-convex programming, GPU acceleration, convergence guarantees]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Debraj Banerjee, Santanu Mahapatra, Kunal Narayan Chaudhury"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Based on the technical content and GPU implementation across platforms, likely from academic institutions with strong computing/engineering programs (e.g., universities with HPC facilities) or industry research labs focusing on optimization algorithms"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.01928v1",children:"http://arxiv.org/pdf/2509.01928v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper proposes a continuous energy Ising machine that relaxes binary spins to continuous variables and uses difference-of-convex programming for efficient optimization. The method requires only one matrix-vector multiplication per iteration and provides convergence guarantees. Experimental results show it consistently outperforms existing solvers across problem sizes from small to ultra-large scales on various GPU platforms."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] MLP-Offload: Multi-Level, Multi-Path Offloading for LLM Pre-training to\nBreak the GPU Memory Wall"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [LLM training], [memory offloading, GPU memory optimization, multi-tier storage, I/O bottleneck mitigation]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Avinash Maurya, M. Mustafa Rafique, Franck Cappello, Bogdan Nicolae"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Based on the technical focus and problem domain, likely from academic institutions or companies specializing in systems optimization for AI training (e.g., universities with strong systems research or AI infrastructure companies)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.02480v1",children:"http://arxiv.org/pdf/2509.02480v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," MLP-Offload introduces a multi-level, multi-path offloading engine that optimizes LLM pre-training by efficiently distributing optimizer states across storage tiers. It reduces I/O bottlenecks during backward and update phases through cache-efficient strategies and concurrency control. The method achieves 2.5\xd7 faster training iterations compared to state-of-the-art systems for models up to 280B parameters."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Batch Query Processing and Optimization for Agentic Workflows"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [LLM inference], [batch query processing, agentic workflows, KV-cache sharing, GPU utilization, query optimization]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Junyi Shen, Noppanat Wadlom, Yao Lu"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Based on the technical focus on LLM serving systems and optimization, likely from academic institutions with strong systems research groups (e.g., UC Berkeley, MIT, Stanford, CMU) or industry labs (e.g., Google Research, Microsoft Research)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.02121v1",children:"http://arxiv.org/pdf/2509.02121v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," Halo introduces batch query processing and optimization for agentic LLM workflows by representing workflows as structured DAGs and performing plan-level optimization. It uses adaptive batching, KV-cache sharing, and compute-communication overlap to maximize hardware efficiency. Evaluation shows up to 18.6x speedup for batch inference and 4.7x throughput improvement without compromising output quality."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] OASIS: Object-based Analytics Storage for Intelligent SQL Query\nOffloading in Scientific Tabular Workloads"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [cluster infrastructure], [object storage, SQL query offloading, scientific workloads, storage hierarchy optimization]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Soon Hwang, Junhyeok Park, Junghyun Ryu, Seonghoon Ahn, Jeoungahn Park, Jeongjin Lee, Soonyeal Yang, Jungki Noh, Woosuk Chung, Hoshik Kim, Youngjae Kim"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Based on the technical content and HPC focus, likely from a research institution or university with strong systems research (e.g., ETH Zurich, MIT, UC Berkeley, or national labs like Argonne/LBNL)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.01966v1",children:"http://arxiv.org/pdf/2509.01966v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," OASIS introduces a Computation-Enabled Object Storage system that supports flexible output formats, complex operators, and dynamic execution path selection across storage layers. It integrates with Spark and demonstrates up to 32.7% performance improvement over existing COS systems in HPC scientific query workloads. The system optimizes data movement and operator execution close to storage for enhanced analytical efficiency."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-03",children:"2025-09-03"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] DPQuant: Efficient and Differentially-Private Model Training via Dynamic\nQuantization Scheduling"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models training], [differential privacy, quantization, training optimization, model efficiency, privacy-preserving ML]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Yubo Gao, Renbo Tu, Gennady Pekhimenko, Nandita Vijaykumar"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," University of Toronto"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.03472v1",children:"http://arxiv.org/pdf/2509.03472v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," DPQuant introduces a dynamic quantization framework that adaptively selects layers for quantization during differentially private training, combining probabilistic sampling and loss-aware prioritization. This approach reduces quantization variance amplified by DP-SGD noise injection while preserving privacy guarantees. The method achieves near Pareto-optimal accuracy-compute trade-offs with up to 2.21\xd7 throughput improvements and minimal accuracy degradation across multiple models and datasets."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Combining Performance and Productivity: Accelerating the Network Sensing\nGraph Challenge with GPUs and Commodity Data Science Software"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [kernels], [Graph Challenge, GPU acceleration, data science tools, RAPIDS, cuDF, cupy, GraphBLAS, network sensing, performance optimization]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Siddharth Samsi, Dan Campbell, Emanuel Scoullos, Oded Green"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," NVIDIA"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.03653v1",children:"http://arxiv.org/pdf/2509.03653v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper presents an alternative implementation of the Network Sensing Graph Challenge using data science tools from NVIDIA's RAPIDS ecosystem. By leveraging cuDF and cupy instead of traditional HPC code, the authors achieve significant GPU acceleration. The method demonstrates speedups of 147x-2185x over CPU-based Pandas implementations across different NVIDIA GPU architectures."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] CloudFormer: An Attention-based Performance Prediction for Public Clouds\nwith Unknown Workload"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [trace analysis], [performance prediction, cloud computing, virtual machines, transformer, attention mechanism, interference mitigation, system metrics]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Amirhossein Shahbazinia, Darong Huang, Luis Costero, David Atienza"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," \xc9cole Polytechnique F\xe9d\xe9rale de Lausanne (EPFL)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.03394v1",children:"http://arxiv.org/pdf/2509.03394v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," CloudFormer proposes a dual-branch Transformer model that jointly models temporal dynamics and system-level interactions to predict VM performance degradation in black-box cloud environments. The method leverages 206 system metrics at one-second resolution and demonstrates robust generalization across diverse workloads without scenario-specific tuning. Experimental results show CloudFormer achieves state-of-the-art performance with just 7.8% MAE, significantly outperforming existing methods by at least 28%."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] FlashRecovery: Fast and Low-Cost Recovery from Failures for Large-Scale\nTraining of LLMs"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [LLM training], [fault tolerance, failure recovery, checkpoint-free, large-scale training, cluster management]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Haijun Zhang, Jinxiang Wang, Zhenhua Yu, Yanyong Zhang, Xuejie Ji, Kaining Mao, Jun Zhang, Yaqing Zhang, Ting Wu, Fei Jie, Xiemin Huang, Zhifang Cai, Junhua Cheng, Shuwei Wang, Wei Li, Xiaoming Bao, Hua Xu, Shixiong Zhao, Jun Li, Hongwei Sun, Ziyang Zhang, Yi Xiong, Chunsheng Li"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," iFLYTEK AI Engineering Institute, University of Science and Technology of China, Huawei Technologies Co., Ltd"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.03047v1",children:"http://arxiv.org/pdf/2509.03047v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," FlashRecovery introduces a three-module system for fast failure recovery in large-scale LLM training, featuring real-time failure detection, scale-independent task restart, and checkpoint-free single-step restoration. It achieves optimal recovery objectives with consistent recovery times across cluster scales. Experimental results show recovery within 150 seconds on a 4800-device cluster."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Mycroft: Tracing Dependencies in Collective Communication Towards\nReliable LLM Training"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [LLM training], [collective communication, distributed tracing, root cause analysis, fault detection, reliability]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Yangtao Deng, Lei Zhang, Qinlong Wang, Xiaoyun Zhi, Xinlei Zhang, Zhuo Jiang, Haohan Xu, Lei Wang, Zuquan Song, Gaohong Liu, Yang Bai, Shuguang Wang, Wencong Xiao, Jianxi Ye, Minlan Yu, Hong Xu"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," ByteDance"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.03018v1",children:"http://arxiv.org/pdf/2509.03018v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," Mycroft introduces a lightweight distributed tracing system that tracks collective communication states and leverages internal dependencies to resolve reliability issues in LLM training. It achieves rapid anomaly detection within 15 seconds in 90% of cases and root cause identification within 20 seconds in 60% of cases. The system has been successfully deployed at ByteDance for over six months, demonstrating effectiveness through extensive fault injection experiments."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-04",children:"2025-09-04"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Counterfactual simulations for large scale systems with burnout\nvariables"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models inference], [counterfactual simulation, burnout variables, uncertainty relaxation, parallel computation, online advertising]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Benjamin Heymann"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," ENSAE, Criteo AI LAB"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.04038v1",children:"http://arxiv.org/pdf/2509.04038v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," The paper introduces uncertainty relaxation algorithms that enable parallel computation for counterfactual simulations in systems with burnout variables. This approach significantly improves scalability compared to traditional sequential processing methods. The method is particularly applicable to online advertising systems where campaign budgets create complex dynamic constraints."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] LowDiff: Efficient Frequent Checkpointing via Low-Cost Differential for\nHigh-Performance Distributed Training Systems"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [checkpointing], [distributed training, gradient compression, differential checkpointing, fault tolerance, performance optimization]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Chenxuan Yao, Yuchong Hu, Feifan Liu, Zhengyu Liu, Dan Feng"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Huazhong University of Science and Technology"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.04084v1",children:"http://arxiv.org/pdf/2509.04084v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," LowDiff proposes an efficient frequent checkpointing framework that reuses compressed gradients as differential checkpoints and employs batched gradient writes with dynamic tuning. It achieves high checkpointing frequency with minimal runtime overhead by leveraging layer-wise gradient reusing and asynchronous persistence strategies. Experimental results demonstrate the framework can perform checkpointing every iteration while maintaining less than 3.1% performance overhead."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Massively-Parallel Implementation of Inextensible Elastic Rods Using\nInter-block GPU Synchronization"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [kernels], [GPU computing, elastic rods, medical simulation, parallel algorithms, CUDA]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Przemyslaw Korzeniowski, Niels Hald, Fernando Bello"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Imperial College London"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.04277v1",children:"http://arxiv.org/pdf/2509.04277v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper presents a massively-parallel GPU implementation of inextensible elastic rods using inter-block synchronization, achieving significant speedups over CPU versions. The method enables multiple physics time-steps per kernel launch by utilizing all GPU streaming multiprocessors efficiently. The implementation achieves real-time haptic rates for medical simulations like catheter/guidewire pairs with performance boosts up to 40x faster than previous approaches."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Prob-GParareal: A Probabilistic Numerical Parallel-in-Time Solver for\nDifferential Equations"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models inference], [probabilistic numerical solver, parallel-in-time methods, uncertainty quantification, Gaussian processes, differential equations]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Guglielmo Gattiglio, Lyudmila Grigoryeva, Massimiliano Tamborrino"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," University of Warwick, University of St. Gallen"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.03945v1",children:"http://arxiv.org/pdf/2509.03945v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," Prob-GParareal extends the GParareal algorithm using Gaussian processes to model correction functions, enabling uncertainty quantification for parallel-in-time solutions of differential equations. The method propagates numerical uncertainty across time domains and handles probabilistic initial conditions while maintaining compatibility with classical solvers. Theoretical analysis and numerical experiments demonstrate its accuracy and robustness across various ODE systems, with a nearest-neighbors variant showing improved scalability for PDE problems."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-05",children:"2025-09-05"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Efficient Fault Localization in a Cloud Stack Using End-to-End\nApplication Service Topology"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [trace analysis], [fault localization, cloud computing, service topology, root cause detection, performance anomalies]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Dhanya R Mathews, Mudit Verma, Pooja Aggarwal, J. Lakshmi"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Indian Institute of Science, Bangalore and IBM Research, India"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.05511v1",children:"http://arxiv.org/pdf/2509.05511v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper proposes a topology-aware approach for efficient fault localization in cloud stacks by selecting informative metrics and incorporating end-to-end service topology into root cause detection algorithms. The method improves the accuracy of identifying performance anomaly sources by considering the complete service component relationships. Evaluation shows the proposed TA-RCD algorithm performs at least 2x better than state-of-the-art methods in Top-3 and Top-5 recall metrics."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] veScale: Consistent and Efficient Tensor Programming with Eager-Mode\nSPMD"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [LLM training], [SPMD, eager execution, distributed training, tensor programming, random number generation, performance optimization]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Youjie Li, Cheng Wan, Zhiqi Lin, Hongyu Zhu, Jiacheng Yang, Ziang Song, Xinyi Di, Jiawei Wu, Huiyao Shu, Wenlei Bao, Yanghua Peng, Haibin Lin, Li-Wen Chang"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," ByteDance"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.07003v1",children:"http://arxiv.org/pdf/2509.07003v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," veScale introduces an eager-mode training system that fully embraces the SPMD paradigm to simplify distributed tensor programming. It addresses consistency issues through a novel distributed RNG algorithm and improves performance by reducing PyTorch overhead and enhancing communication efficiency. Evaluations show veScale achieves up to 2.2x speedup over state-of-the-art systems while reducing code complexity by 78.4% and maintaining single-device-equivalent results."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Toward Distributed 3D Gaussian Splatting for High-Resolution Isosurface\nVisualization"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models training], [distributed computing, multi-GPU optimization, scientific visualization, 3D Gaussian splatting, high-performance computing]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Mengjiao Han, Andres Sewell, Joseph Insley, Janet Knowles, Victor A. Mateevitsi, Michael E. Papka, Steve Petruzza, Silvio Rizzi"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Argonne National Laboratory"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.05216v1",children:"http://arxiv.org/pdf/2509.05216v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper presents a distributed multi-GPU extension of the 3D Gaussian Splatting pipeline for scientific visualization. The method adapts a multi-GPU training backend to enable scalable processing of large datasets, achieving 5.6x speedup on benchmark datasets. This work enables high-resolution isosurface reconstructions that exceed single-GPU capacity and integrates 3D-GS into HPC workflows."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-06",children:"2025-09-06"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Distributed Deep Learning using Stochastic Gradient Staleness"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models training], [distributed deep learning, stochastic gradient staleness, parallel backpropagation, data parallelism, training efficiency]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Viet Hoang Pham, Hyo-Sung Ahn"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Posts and Telecommunications Institute of Technology (PTIT), Gwangju Institute of Science and Technology (GIST)"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.05679v1",children:"http://arxiv.org/pdf/2509.05679v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper proposes a distributed training method combining data parallelism and fully decoupled parallel backpropagation to accelerate deep learning. The approach uses multiple computational units to process more training data per iteration while reducing locking issues. Experimental results on CIFAR-10 demonstrate significant improvements in training efficiency, with theoretical convergence guarantees to critical points."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] The Fused Kernel Library: A C++ API to Develop Highly-Efficient GPU\nLibraries"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [kernels], [kernel fusion, GPU optimization, C++ API, SRAM utilization, compile-time code generation]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Oscar Amoros, Albert Andaluz, Johnny Nunez, Antonio J. Pena"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Barcelona Supercomputing Center"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2508.07071v2",children:"http://arxiv.org/pdf/2508.07071v2"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," The paper introduces a C++ API methodology using C++17 metaprogramming to automatically generate fused GPU kernels that combine multiple operations at compile time. This approach eliminates manual kernel development and pre-compilation while maximizing GPU resource utilization and keeping intermediate data in on-chip memory. Experimental results show performance improvements from 2x to over 1000x compared to traditional GPU libraries while maintaining high-level programmability."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"[arXiv2509] Real-Time Analysis of Unstructured Data with Machine Learning on\nHeterogeneous Architectures"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models inference], [real-time processing, graph neural networks, heterogeneous architectures, FPGA acceleration, GPU implementation, particle physics, LHCb experiment]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Fotis I. Giasemis"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," CERN"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2508.07423v3",children:"http://arxiv.org/pdf/2508.07423v3"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," This paper presents a graph neural network-based pipeline for charged particle track reconstruction implemented on GPUs and FPGAs at the LHCb experiment. The system was deployed end-to-end in the first-level trigger and compared against classical tracking algorithms. The research demonstrates efficient machine learning deployment in high-frequency real-time environments while optimizing throughput and energy consumption."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"2025-09-07",children:"2025-09-07"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"[arXiv2509] DISTRIBUTEDANN: Efficient Scaling of a Single DISKANN Graph Across\nThousands of Computers"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"tags:"})," [mlsys], [Other models inference], [distributed systems, vector search, approximate nearest neighbor, graph index, scalability]"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"authors:"})," Philip Adams, Menghao Li, Shi Zhang, Li Tan, Qi Chen, Mingqin Li, Zengzhong Li, Knut Risvik, Harsha Vardhan Simhadri"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"institution:"})," Microsoft"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"link:"})," ",(0,r.jsx)(e.a,{href:"http://arxiv.org/pdf/2509.06046v1",children:"http://arxiv.org/pdf/2509.06046v1"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Simple LLM Summary:"})," DISTRIBUTEDANN presents a distributed vector search service using a distributed key-value store and in-memory ANN index to scale a single graph across thousands of machines. It achieves 26ms median query latency and over 100,000 QPS on a 50 billion vector index, making it 6x more efficient than existing approaches. The system has been successfully deployed in the Bing search engine, replacing conventional scale-out architectures."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(h,{...n})}):h(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function a(n){const e=s.useContext(t);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);